{
  "hash": "5fe707b5ea7f94061bdfadaeeee47964",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling, Updates, and Validation\"\nauthor: \"Bailie Wynbelt\"\ndate: \"2023-10-17\"\ncategories: [R, Wrangling, Validation]\nimage: \"flora.jpg\"\nformat: html\n---\n\nThe following code is a representation of my work in School of Natural Resources. I was using data that was collected in 2017 and we wanted to run new analyses. \n\nThe data consists of rodents samples that were collected in the southwest. The goal of this data was to display what rodents are eating and how they are diet partitioning. \n\nThis document shows the wrangling, update, and validation of the large data using the package Worldflora to find updated taxonomic names.\n\nIt is important to note that the data will not be displayed in this document. The data is large and confidental. However, my code is still in the useable format and results in a dataset with updated taxonomic names and codes!\n\nInstall and load packages.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(WorldFlora)\nlibrary(tidyverse)\n```\n:::\n\n\nDownload and remember WFO data.\n\n::: {.cell}\n\n```{.r .cell-code}\n#WFO.download()\n#WFO.remember(WFO.file = \"classification.csv\")\n```\n:::\n\n\nRead in trnL data.\n\n::: {.cell}\n\n```{.r .cell-code}\n#trnL_plants <- read_csv(\"../data/sequenced/trnL_reads_WeeTU.csv\")\n```\n:::\n\n\nFind name issues in trnL data - this includes species with Authorship or other rows with strange names.\n\n::: {.cell}\n\n```{.r .cell-code}\ntrnL_name_issues <- trnL_plants %>% \n   distinct(Species) %>% \n   mutate(Species = str_replace_all(Species, \"_\", \" \")) %>% \n   mutate(n_words = str_count(Species, \"\\\\w+\")) %>% \n   filter(n_words > 2)\n\n#write_csv(trnL_name_issues, \"../outputs/naming_issues/trnL_name_issues.csv\")\n```\n:::\n\n\nReplace \"_\" with a space with gsub - see comment below.\n\n::: {.cell}\n\n```{.r .cell-code}\n#not required to run but here for another example of how to replace characters\ntrnL_plants$Species <- gsub(\"_\",\" \", trnL_plants$Species)\n```\n:::\n\n\nFix naming issues - see comment below. This code was kept as an example of how to update plant names. However this is an extremely long and time consuming way to mutate the data.\n\n::: {.cell}\n\n```{.r .cell-code}\n#do not run - here just to keep - old code\ntrnL_plants <- trnL_plants %>% \n  mutate(Species = str_replace_all(Species, \"_\", \" \")) %>% \n  mutate(Species = replace(Species, Species == \"Chamaecrista sp  ASC-2009\", \"Chamaecrista sp.\"), \n         Species = replace(Species, Species == \"Setaria sp  TRK-2015\", \"Setaria sp.\"),\n         Species = replace(Species, Species == \"Sanango sp  Bremer 3352\", \"Sanango sp.\"),\n         Species = replace(Species, Species == \"Helichrysum sp  TRK-2015\", \"Helichrysum sp.\"),\n         Species = replace(Species, Species == \"Taraxacum sect  Naevosa sp  6281f\", \"Taraxacum (sect Naevosa) sp.\"),\n         Species = replace(Species, Species == \"Muehlenbeckia sp  Mt Brockman L A Craven 2357 K L Wilson & Makinson\", \"Muehlenbeckia sp.\"),\n         Species = replace(Species, Species == \"Sida sp  TRK-2015\", \"Sida sp.\"),\n         Species = replace(Species, Species == \"Eragrostis sp  TRK-2015\", \"Eragrostis sp.\"),\n         Species = replace(Species, Species == \"Dypsis sp  Mada25\", \"Dypsis sp.\"),\n         Species = replace(Species, Species == \"Quercus sp  MES114\", \"Quercus sp.\"),\n         Species = replace(Species, Species == \"Ichnanthus sp  Silva et al  550\", \"Ichnanthus sp.\"),\n         Species = replace(Species, Species == \"Juniperus hybrid sp  LO-2009\", \"Juniperus sp.\"),\n         Species = replace(Species, Species == \"Solanum sp  TRK-2015\", \"Solanum sp.\"),\n         Species = replace(Species, Species == \"Pavonia sp  TRK-2015\", \"Pavonia sp.\"),\n         Species = replace(Species, Species == \"Asteraceae sp  TRK-2015\", \"Asteraceae sp.\"),\n         Species = replace(Species, Species == \"Zygia sp  KGD-2009\", \"Zygia sp.\"),\n         Species = replace(Species, Species == \"Hildaea sp  Costa et al  903\", \"Hildaea sp.\"),\n         Species = replace(Species, Species == \"Gazania sp  Koekemoer and Funk 1929\", \"Gazania sp.\"),\n         Species = replace(Species, Species == \"Digitaria sp  TRK-2015\", \"Digitaria sp.\"),\n         Species = replace(Species, Species == \"Celtis sp  Mada221\", \"Celtis sp.\"),\n         Species = replace(Species, Species == \"Nicotiana sp  'rastroensis'\", \"Nicotiana sp.\"),\n         Species = replace(Species, Species == \"Castanopsis sp  'kuchugouzhui'\", \"Castanopsis sp.\"),\n         Species = replace(Species, Species == \"Asteroideae sp  D3-001\", \"Asteroideae sp.\"),\n         Species = replace(Species, Species == \"Operculina sp  Romero 1701\", \"Operculina sp.\"),\n         Species = replace(Species, Species == \"Musa sp  Ogasawara06\", \"Musa sp.\"),\n         Species = replace(Species, Species == \"Pithecellobium sp  DS14533 JM1598\", \"Pithecellobium sp.\"),\n         Species = replace(Species, Species == \"Excoecaria sp  Pell 678\", \"Excoecaria sp.\"),\n         Species = replace(Species, Species == \"Enneapogon sp  TRK-2015\", \"Enneapogon sp.\"),\n         Species = replace(Species, Species == \"Phyllarthron sp  Mada29\", \"Phyllarthron sp.\"),\n         Species = replace(Species, Species == \"Catalpa aff  speciosa Olmstead 88-003\", \"Catalpa sp.\"),\n         Species = replace(Species, Species == \"Piresia sp  Hodkinson 601\", \"Piresia sp.\"),\n         Species = replace(Species, Species == \"Calliandra sp  ERS-2013\", \"Calliandra sp.\"),\n         Species = replace(Species, Species == \"Sclerophylax sp  Nee and Bohs 50857\", \"Sclerophylax sp.\"))\n```\n:::\n\n\nReplace names only identified to species level with an \"NA\" in the \"Species\" column.\n\n::: {.cell}\n\n```{.r .cell-code}\ntrnL_plants <- trnL_plants %>% \n  mutate(Species = str_replace_all(Species, \"_\", \" \")) %>% \n  mutate(Species = replace(Species, Species == \"Chamaecrista sp  ASC-2009\", \"NA\"),\n         Species = replace(Species, Species == \"Setaria sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Sanango sp  Bremer 3352\", \"NA\"),\n         Species = replace(Species, Species == \"Helichrysum sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Taraxacum sect  Naevosa sp  6281f\", \"NA\"),\n         Species = replace(Species, Species == \"Muehlenbeckia sp  Mt Brockman L A Craven 2357 K L Wilson & Makinson\", \"NA\"),\n         Species = replace(Species, Species == \"Sida sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Eragrostis sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Dypsis sp  Mada25\", \"NA\"),\n         Species = replace(Species, Species == \"Quercus sp  MES114\", \"NA\"),\n         Species = replace(Species, Species == \"Ichnanthus sp  Silva et al  550\", \"NA\"),\n         Species = replace(Species, Species == \"Juniperus hybrid sp  LO-2009\", \"NA\"),\n         Species = replace(Species, Species == \"Solanum sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Pavonia sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Asteraceae sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Zygia sp  KGD-2009\", \"NA\"),\n         Species = replace(Species, Species == \"Hildaea sp  Costa et al  903\", \"NA\"),\n         Species = replace(Species, Species == \"Gazania sp  Koekemoer and Funk 1929\", \"NA\"),\n         Species = replace(Species, Species == \"Digitaria sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Celtis sp  Mada221\", \"NA\"),\n         Species = replace(Species, Species == \"Nicotiana sp  'rastroensis'\", \"NA\"),\n         Species = replace(Species, Species == \"Castanopsis sp  'kuchugouzhui'\", \"NA\"),\n         Species = replace(Species, Species == \"Asteroideae sp  D3-001\", \"NA\"),\n         Species = replace(Species, Species == \"Operculina sp  Romero 1701\", \"NA\"),\n         Species = replace(Species, Species == \"Musa sp  Ogasawara06\", \"NA\"),\n         Species = replace(Species, Species == \"Pithecellobium sp  DS14533 JM1598\", \"NA\"),\n         Species = replace(Species, Species == \"Excoecaria sp  Pell 678\", \"NA\"),\n         Species = replace(Species, Species == \"Enneapogon sp  TRK-2015\", \"NA\"),\n         Species = replace(Species, Species == \"Phyllarthron sp  Mada29\", \"NA\"),\n         Species = replace(Species, Species == \"Catalpa aff  speciosa Olmstead 88-003\", \"NA\"),\n         Species = replace(Species, Species == \"Piresia sp  Hodkinson 601\", \"NA\"),\n         Species = replace(Species, Species == \"Calliandra sp  ERS-2013\", \"NA\"),\n         Species = replace(Species, Species == \"Sclerophylax sp  Nee and Bohs 50857\", \"NA\")) %>% \n  filter(Species != \"fossil Castanea pollen\")\n```\n:::\n\n\nSelect only the distinct values in the \"Species\" column, and remove NAs/names that are not essential based on trnL_name_issues.csv file for WFO.match().\n\n::: {.cell}\n\n```{.r .cell-code}\ntrnL_plant_species <- trnL_plants %>% \n  filter(Species != \"NA\") %>% \n  select(Species) %>% \n  distinct()\n```\n:::\n\n\nConvert to data frame so WFO.match can run properly.\n\n::: {.cell}\n\n```{.r .cell-code}\n# need to convert trnL_plant_species from a tibble to a dataframe\ntrnL_plant_species <- as.data.frame(trnL_plant_species)\n```\n:::\n\n\nMatch trnL data with WFO data. WFO will match your data set with out of data names. Specifically it will add a new column of updated authorship, genus, etc.\n\n::: {.cell}\n\n```{.r .cell-code}\ntrnL_plant_match <- WFO.match(spec.data = trnL_plant_species, \n                               WFO.data = WFO.data,\n                               spec.name = \"Species\", \n                               Authorship = '', \n                               First.dist = TRUE, \n                               Fuzzy.min = TRUE, \n                               Fuzzy = 0.1, \n                               Fuzzy.max = 250, \n                               Fuzzy.two = TRUE, \n                               Fuzzy.one = TRUE, \n                               squish = TRUE, \n                               spec.name.tolower = FALSE, \n                               spec.name.nonumber = TRUE, \n                               spec.name.nobrackets = TRUE, \n                               exclude.infraspecific = FALSE, \n                               verbose = TRUE, \n                               counter = 1000)\n```\n:::\n\n\nWrite csv for plant matches and save to outputs folder. This file contains all plants that had a \"match\" with the WFO data. Otherwise, this means that the original plant name is outdated.\n\n::: {.cell}\n\n```{.r .cell-code}\n#write_csv(trnL_plant_match, \"../outputs/trnL_plant_match.csv\")\n```\n:::\n\n\nSelect plants that had fuzzy values and select needed columns from WFO.match data output.\n\n::: {.cell}\n\n```{.r .cell-code}\nfuzzy_plants_trnL <- trnL_plant_match %>% \n  filter(Fuzzy == 'TRUE') %>% \n  select(Fuzzy,\n         Old.name,\n         family,\n         genus,\n         Species,\n         scientificName, \n         taxonID,\n         taxonomicStatus,\n         New.accepted)\n```\n:::\n\n\nKeep only distinct updated scientific name matches, and remove subspecies distinction.\n\n::: {.cell}\n\n```{.r .cell-code}\nfuzzy_plants_trnL <- fuzzy_plants_trnL %>% \n  mutate(scientificName = replace(scientificName, scientificName == \"Diplotaxis erucoides  subsp. cossoniana\", \"Diplotaxis erucoides\")) %>% \n  distinct(scientificName, .keep_all = TRUE)\n```\n:::\n\n\nAdd updated names to ITS2 data with a left join.\n\n::: {.cell}\n\n```{.r .cell-code}\nupdated_trnL <- trnL_plants %>% \n  left_join(fuzzy_plants_trnL, by = \"Species\") \n```\n:::\n\n\nRename columns and deselect unneeded columns.\n\n::: {.cell}\n\n```{.r .cell-code}\nupdated_trnL <- updated_trnL %>% \n  rename(updated.Name = scientificName) %>% \n  rename(updated.genus = genus) %>% \n  rename(updated.family = family) %>% \n  select(-c(Fuzzy, Old.name, taxonomicStatus)) %>% \n  distinct() \n```\n:::\n\n\nReplace old names, genus, and family with new names in trnL file using ifelse statement.\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_updated_trnL <- updated_trnL %>% \n  mutate(Species = if_else(!is.na(updated.Name),\n                           true = updated.Name,\n                           false = Species)) %>% \n  mutate(Genus = if_else(!is.na(updated.genus),\n                           true = updated.genus,\n                           false = Genus)) %>% \n  mutate(Family = if_else(!is.na(updated.family),\n                          true = updated.family,\n                          false = Family))\n```\n:::\n\n\nQuality check to make sure it worked! \n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_updated_trnL %>% \n  filter(Species == \"Reicheocactus famatinensis\")\n\nfinal_updated_trnL %>% \n  filter(Species == \"Lycium bridgesii\")\n```\n:::\n\n\nRecreate WTUs. This is a specific identifier with a set code format used for this dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add WeeTUs for Summarizing\n# https://dplyr.tidyverse.org/reference/group_data.html\nupdated_trnL_reads_WeeTU <- final_updated_trnL %>% \n  mutate(WTU.kingdom = group_indices(., Kingdom),\n         WTU.clade1 = group_indices(., Kingdom, Clade1),\n         WTU.clade2 = group_indices(., Kingdom, Clade1, Clade2),\n         WTU.order = group_indices(., Kingdom, Clade1, Clade2, Order),\n         WTU.family = group_indices(., Kingdom, Clade1, Clade2, Order, Family),\n         WTU.subfamily = group_indices(., Kingdom, Clade1, Clade2, Order, \n                                       Family, Subfamily),\n         WTU.genus = group_indices(., Kingdom, Clade1, Clade2, Order, Family, \n                                   Subfamily, Genus),\n         WTU.species = group_indices(., Kingdom, Clade1, Clade2, Order, Family, \n                                     Subfamily, Genus, Species))\n```\n:::\n\n\nRemove unneeded columns and save final data frame as a csv to outputs folder.\n\n::: {.cell}\n\n```{.r .cell-code}\nupdated_trnL_reads_WeeTU <- updated_trnL_reads_WeeTU %>% \n  select(-c(updated.family, updated.genus, updated.Name, New.accepted))\n\n#write_csv(final_updated_trnL, \"../outputs/updated_trnL_reads_WeeTU.csv\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}