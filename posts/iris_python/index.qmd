---
title: "Python Data Wrangling Workshop"
author: "Bailie Wynbelt"
date: "2023-10-17"
categories: [Python, Analysis, Visualization]
image: "iris.jpg"
format: html
jupyter: python3
---

The following is a workshop that I created to teach beginner programmers an introduction to data wrangling in Python using Pandas!

# Python data wrangling workshop

-   An introduction to the pandas package
-   Bailie Wynbelt / Jeff Oliver
-   3 February, 2023

### Objectives / Learning Outcomes

1.  Manipulate data and extract information from datasets using pandas
2.  Create descriptive summary statistics
3.  Output data visualizations with (plot9)

## Data Science: more fun, less pain

But wait...you might be wondering what is pandas and how can we use it in Data Science?

Python is a dynamic language that can be used for a variety of problems these ranging from Software Enginnering to Data Science. Today, we are going to focus on how to use Python, specifically the pandas package, to wrangle, analyze, and visualize data. The pandas package is a collection of functions that allows us to easily manipulate, summarize, and visualize data. In this lesson, we will use the pandas package and the iris dataset to wrangle data, create summary statistics, and develop appealing visualizations.

-   Descriptive statisitcs and visualization with pandas
-   Bailie Wynbelt
-   wynbeltb\@arizona.edu
-   2024-02-04

```{python}
#import statements
import pandas as pd

import numpy as np

from plotnine import *
```

Now that we have imported all the required packages, we can read in the data.

To do this we will use the read_csv() function from pandas

```{python}
#import iris data set
#This is a dataframe, meaning it is a two-dimentional structure.
csv_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data' #get csv url

iris =  pd.read_csv(csv_url, names = ['sepal_length','sepal_width','petal_length','petal_width','species'])

iris
```

## Explore the Data

We have imported the pandas package and the dataset! Now we can start exploring the dataset and working on summarizing the data.

Some of my favorite ways of exploring the dataset include the following:

```{python}
#Gives the number of rows and columns in the format (rows, columns)
iris.shape()
```

```{python}
#Shows the name ofthe column, number of non-null values, and the datatype.
iris.info()
```

```{python}
#Returns the first 5 rows
iris.head()
```

```{python}
#Returns the last 5 rows
iris.tail()
```

We have imported the pandas package/dataset and have explored the data! Now we can start working on summarizing the data.

## Summarizing the data

How can we create descriptive statistics for the iris dataset? -Means -Standard errors -For each trait -For each species

```{python}
#Quick statisitic summary of data
iris.describe()
```

```{python}
#Find the mean of sepal length for all species
iris_mean = iris["sepal_length"].mean()

iris_mean
```

```{python}
#Find the standard deviation of sepal length for all species
iris_std = iris["sepal_length"].std()

iris_std
```

We have found the mean and standard deviation for sepal_length. However, there are also different species, so what if there are differences in traits between species?

To explore this question we can use the groupby function.

```{python}
#find the mean for each species for each trait (column)
iris_mean = iris.groupby('species').mean()

iris_mean
```

What if we also want to find the standard deviation for each trait for each species?

We can use the agg function alongside the groupby function.

```{python}
#find the mean and standard deviation for each species for each trait (column)
iris_stats = iris.groupby('species').agg(['mean', 'std'])

iris_stats
```

Great! Now we have a descriptive statistics for all species and traits. Similar steps can be taken if you just want to find descriptive statistics for one column or trait. Lets explore how to do this below.

```{python}
#find the mean per species for sepal length
iris_mean = iris.groupby('species')['sepal_length'].mean()

iris_mean
```

```{python}
#find the mean and standard deviation for sepal length of each species
iris_stats = iris.groupby('species')['sepal_length'].agg(['mean', 'std'])

iris_stats
```

## Plotting Data

So far we have:

-   read the data
-   explored the data
-   created descriptive statistics

We are now read to visualize the data! In R, people commonly use ggplot2 to visualize datasets. In python, we will use plot9 which essentially functions similarly to ggplot2 and outputs similar visualizations

First, we need to create a general plot and then state what type of plot we want.

We are going to create a scatterplot displaying sepal length on the x-axis and sepal width on the y-axis.

```{python}
(ggplot(iris, aes(x = "sepal_length", y = "sepal_width")) 
+ geom_point())
```

It looks like there is two distinct groupings within our scatterplot, lets explore this more by adding an extra argument into the aes() function.

```{python}
(ggplot(iris, aes(x = "sepal_length", y = "sepal_width", color = "species")) 
+ geom_point())
```

Lastly, we can better visualize the differences between species by faceting and creating a linear model. This can be done by adding the facet_wrap and stat_smooth argument.

A facet wrap is dividing the graph into sections based on a particular variable. In our case, it is species.

Lastly, we can beautify the graph by adding labels and a title.

```{python}
(ggplot(iris, aes(x = "sepal_length", 
                  y = "sepal_width", 
                  color = "species")) +
        geom_point() +
        facet_wrap("~species") +
        stat_smooth(method = "lm", color = "black") +
        labs(x = "Sepal Legnth",
            y = "Sepal Width",
            title = "Sepal Length VS Sepal Width of Iris Species"))
```

# Your turn!

Great! We were able to explore the data, find descriptive statistics, and create a visualization.

Now, it is your turn to work together and explore the palmers penguins dataset, with the end goal of finding descriptive statistics and a visualization.

First, lets start with loading in the data. We will do this together

```{python}
#load in the data
from palmerpenguins import load_penguins
penguins = load_penguins()
```

## Explore the dataset

Employ one or two of the exploratory functions we used before. Use which ever ones are your favorite!

```{python}
#explore the data
penguins.head()
```

```{python}
penguins.tail()
```

```{python}
penguins.describe()
```

## Find Descriptive Statistics

We want to find descriptive statistics for the dataset! For your challenge, find the mean and standard deviation of the "body_mass_g" column per species

```{python}
penguins_stats = penguins.groupby('species')['body_mass_g'].agg(['mean', 'std'])

penguins_stats
```

## Visualization

For your next challenge... try creating a visualization that displays body mass on the x-axis vs flipper length on the y-axis with color differentiated by sex (color in the aes() argument) and the graph faceted by species. Add labels that you see fit to the graph.

Steps to be taken 1) Create a scatterplot (geom_point) with "body_mass_g" on the x-axis and "flipper_length_mm" on the y-axis. Don't forgot to add aes(color = ) set to "sex" ! 2) Add a facet_wrap by "species" 3) Add labels with the labs() argument

```{python}
penguins_stats = penguins.groupby('species')['body_mass_g'].agg(['mean', 'std'])

penguins_stats
```
